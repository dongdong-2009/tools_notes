

目录A：
      1. Build uboot
      2. 制作启动 Tiny4412 的SD卡
      3. 使用SD卡启动 Tiny4412 并烧写Android
      4. 使用SD卡启动 Android

目录B：
   （1）将u-boot下载到SD卡， 从SD卡启动u-boot
   （2）用U-boot的 fdisk 命令查看设备的分区表信息
   （3）用U-boot fdisk 命令格式化eMMC
   （4）如果格式化eMMC提示如下错误
   （5）Linux下DNW工具安装
   （6）DNW下载好了，就可以把uboot烧写到emmc了
      6.1 烧写bl1.bin
      6.2 烧写bl2.bin
      6.3 烧写u-boot.bin
      6.4 烧写E4412_tzsw.bin
      6.5 从emmc启动
   (7)烧写内核到eMMC
   (8)设置uboot启动参数，启动内核，并挂接网络文件系统NFS
   （9）烧写文件系统到eMMC





////////////////////////////
//Tiny4412 Uboot Repository
////////////////////////////
https://github.com/shiguanghu/uboot_tiny4412.git

README for FriendlyARM Tiny4412

说明：本u-boot源代码由三星原厂提供，并由友善之臂修改移植，以适用于Tiny4412开发板平台, 友善之臂不对此提供任何技术支持和维护。
-----------------------------------------------------
1. Build uboot
-----------------------------------------------------
a) 安装好toolchain (arm-linux-gcc-4.5.1-v6-vfp-20120301.tgz)并设置好
   环境变量PATH，保证可以正常使用。

b) 解压 uboot_tiny4412-20130729.tgz 并进入相应的目录
   tar xzf uboot_tiny4412-20130729.tgz

c) 配置 uboot 并编译
   cd uboot_tiny4412
   make tiny4412_config
   make

d) 编译 用于生成bl2 的工具
   make -C sd_fuse
   或者
   cd sd_fuse; make


--------------

b) 开发板加电，然后在串口控制台(如minicom)，按任意键进入uboot 命令行模式

c) 对SD卡进行分区
   输入以下uboot命令即可对SD卡进行分区：
   fdisk -c 0 320 806 518
   重新分区后，可重新格式化FAT分区
   fatformat mmc 0:1

d) 进入fastboot模式以烧写Android
   使用USB线连接Tiny4412的MICRO_USB口到PC，然后输入以下uboot命令:
   fastboot

e) 烧写 Android 到SD卡
   首先请准备好Android image，包括: zImage, ramdisk-u.img, system.img
   在PC端输入以下命令进行烧写:
   fastboot flash kernel zImage              (烧写kernel)
   
fastboot -w                               (格式化userdata和cache)
   
fastboot flash ramdisk ramdisk-u.img      (烧写ramdisk)
   
fastboot flash system system.img          (烧写system)

f) 也可以在PC端通过fastboot烧写uboot到SD卡
   先手动生成bl2.bin
   cd sd_fuse/tiny4412
   ../mkbl2 ../../u-boot.bin bl2.bin 14336

   然后输入以下命令:  
   fastboot flash fwbl1 E4412_N.bl1.bin
   
fastboot flash bl2 bl2.bin
   
fastboot flash bootloader ../../u-boot.bin

   fastboot flash tzsw E4412_tzsw.bin 


-----------------------------------------------------
4. 使用SD卡启动 Android
-----------------------------------------------------
a) 如果是使用HD700，则烧写完成后直接重启Tiny4412 即可自动启动 Android

b) 如果是使用S700，则需要在uboot上设置kernel命令行参数:
   setenv bootargs console=ttySAC0,115200n8 androidboot.console=ttySAC0 lcd=S700
   saveenv
   然后重启Tiny4412即可。








目录B：
-----------------------------------------------------
下载uboot到emmc
-----------------------------------------------------
怎么将uboot烧写到SD卡， 见https://github.com/shiguanghu/tools_notes/blob/master/Linux 命令进行基于磁盘的烧写，实现启动盘的制作.txt


（1）将u-boot下载到SD卡， 从SD卡启动u-boot，可以看到如下信息：
                  OK
                  U-Boot 2010.12-00000-gd1851db (Apr 07 2018 - 16:39:24) for TINY4412

                  CPU:    S5PC220 [Samsung SOC on SMP Platform Base on ARM CortexA9]
                          APLL = 1400MHz, MPLL = 800MHz

                  Board:  TINY4412
                  DRAM:   1023 MiB

                  vdd_arm: 1.2
                  vdd_int: 1.0
                  vdd_mif: 1.1

                  BL1 version:  N/A (TrustZone Enabled BSP)


                  Checking Boot Mode ... SDMMC
                  REVISION: 1.1
                  MMC Device 0: 7580 MB
                  MMC Device 1: 3728 MB
                  MMC Device 2: N/A
                  *** Warning - using default environment

                  Net:    No ethernet found.
                  Hit any key to stop autoboot:  0 
 

（2）用U-boot的 fdisk 命令查看设备的分区表信息
(设备mmc1的分区信息，即eMMC分析。  
这个是Friendly ARM的 Superboot 分的区信息， 我就照用这个分区。  分区1:FAT分区， 分区2:system， 分区3:user-data, 分区4: cache.)

U-boot的 fdisk 命令用法:
fdisk <-p> <device_num>
fdisk <-c> <device_num> [<sys. part size(MB)> <user data part size> <cache part size>]

         fdisk -p 0     //sd
         fdisk -p 1     //emmc

         TINY4412 # fdisk -p 0
         partion #    size(MB)     block start #    block count    partition_Id 
            1          7429           309248        15214592          0x0B 

         TINY4412 # fdisk -p 1
         partion #    size(MB)     block start #    block count    partition_Id 
            1           407          6659994          835296          0x0C 
            2           608           134244         1245486          0x83 
            3          2057          1379730         4213770          0x83 
            4           520          5593500         1066494          0x83 
         TINY4412 # 

（3）用U-boot fdisk 命令格式化eMMC
u-boot模式下, 输入如下指令来格式化eMMC设备。
TINY4412 #fdisk -c 1 608 2057 520

执行后,会返回分区信息:
            TINY4412 # fdisk -c 1 608 2057 520
            Count: 10000
            Count: 9999
            fdisk is completed

            partion #    size(MB)     block start #    block count    partition_Id 
               1           407          6659994          835296          0x0C 
               2           608           134244         1245486          0x83 
               3          2057          1379730         4213770          0x83 
               4           520          5593500         1066494          0x83 
            TINY4412 # 
            
继续格式话分区1，2，3，4: 
                        用uboot的fatformat命令
                           TINY4412 # fatformat    
                           usage : fatformat <interface> <dev[:part]>
                           
            TINY4412 #fatformat mmc 1:1      //对eMMC的的第1分区做fat格式化。
                    log举例：
                           TINY4412 # fatformat mmc 1:1
                           Start format MMC&d partition&d ...
                           Partition1: Start Address(0x659f9a), Size(0xcbee0)
                           size checking ...
                           Under 8G
                           write FAT info: 32
                           Fat size : 0x32f
                           Erase FAT region...........
                           Partition1 format complete.

            TINY4412 #ext3format mmc 1:2     //对eMMC的分区2 作ext3格式化。
                     log举例：
                           Start format MMC1 partition2 ....
                           ** Partition2 is not ext2 file-system 1 **
                           Partition2: Start Address(0x20c64), Size(0x13012e)
                           Start ext2format...
                           Wirte 0/5block-group
                           Reserved blocks for jounaling : 4102
                           Start write addr : 0x20c64
                           Erase inode table(0) - 0x20db4................
                           d_indirect_point:0x24cbc
                           Wirte 1/5block-group
                           Reserved blocks for jounaling : 4102
                           Start write addr : 0x60c64
                           Erase inode table(1) - 0x60db4................
                           Wirte 2/5block-group
                           Reserved blocks for jounaling : 4102
                           Start write addr : 0xa0c64
                           Erase inode table(2) - 0xa0c74................
                           Wirte 3/5block-group
                           Reserved blocks for jounaling : 4102
                           Start write addr : 0xe0c64
                           Erase inode table(3) - 0xe0db4................
                           Wirte 4/5block-group
                           Reserved blocks for jounaling : 4102
                           Start write addr : 0x120c64
                           Erase inode table(4) - 0x120c74................


            TINY4412 #ext3format mmc 1:3     //对eMMC的分区3 作ext3格式化。
            TINY4412 #ext3format mmc 1:4     //对eMMC的分区4 作ext3格式化。

到此，完成了对eMMC的设备的格式化。

（4）如果提示如下错误：
            Error: No MBR is found at SD/MMC.                                            
            Hint: use fdisk command to make partitions.
            则先执行指令"fdisk -c 0"，执行过程如下：
            #fdisk -c 0                                                        
            fdisk is completed
            

对emmc初始化后，我开始使用dnw来下载uboot到emmc中。
需要装一下linux的dnw工具， 注意dnw是下载到内存， 把固件先缓存起来， 然后烧录到eMMC中。



（5）Linux下DNW工具安装：
      https://github.com/shiguanghu/tools_notes/tree/master/DNW    //从这里下载，编译，安装。


（6）DNW下载好了，就可以把uboot烧写到emmc了

         TINY4412 # emmc open 1        //uboot的emmc命令
         eMMC OPEN Success.!!
                  !!!Notice!!!
         !You must close eMMC boot Partition after all image writing!
         !eMMC boot partition has continuity at image writing time.!
         !So, Do not close boot partition, Before, all images is written.!

         //上面提示emmc开启成功， 注意说明， emmc一旦打开，需要连续烧录，烧录完后可以关闭emmc。

//6.1 烧写bl1.bin
              //uboot开始等待从PC侧传递bl1.bin过来
                  TINY4412 # dnw       
                  OTG cable Connected!
                  Now, Waiting for DNW to transmit data
                  
              //Linux PC端开始传输 E4412_N.bl1.bin:
                  ai@ai-OptiPlex-790:~/Documents/uboot_tiny4412$ sudo dnw  sd_fuse/tiny4412/E4412_N.bl1.bin
                  
              //uboot的log
                  Download Done!! Download Address: 0xc0000000, Download Filesize:0x2000
                  Checksum is being calculated.
                  Checksum O.K.
                  
              //烧写E4412_N.bl1.bin文件到eMMC。 起始0， 16个block, 一个block是512B, 16*512=8*1024=8KB. 这个是bl1.bin的存放位置
                  TINY4412 # mmc write 1 0xc0000000 0 0x10
                  MMC write: dev # 1, block # 0, count 16 ... 16 blocks written: OK
                  
以此类推， 烧录bl2.bin, u-boot.bin, tzsw.bin

//6.2 烧写bl2.bin                        
               //
                  TINY4412 # dnw
                  OTG cable Connected!
                  Now, Waiting for DNW to transmit data
                  
              //Linux PC端开始传输 bl2.bin:
                  ai@ai-OptiPlex-790:~/Documents/uboot_tiny4412$ sudo dnw  sd_fuse/tiny4412/bl2.bin
              
              //uboot的log
                  Download Done!! Download Address: 0xc0000000, Download Filesize:0x3800
                  Checksum is being calculated.
                  Checksum O.K.
                  
              //烧写bl2.bin文件到eMMC。
                  TINY4412 # mmc write 1 0xc0000000 0x10 0x1C
                  MMC write: dev # 1, block # 16, count 28 ... 28 blocks written: OK
                  
//6.3 烧写u-boot.bin 
              //
                  TINY4412 # dnw
                  OTG cable Connected!
                  Now, Waiting for DNW to transmit data
              //
                  ai@ai-OptiPlex-790:~/Documents/uboot_tiny4412$ sudo dnw u-boot.bin
                  
              //
                  Download Done!! Download Address: 0xc0000000, Download Filesize:0x439c4
                  Checksum is being calculated.
                  Checksum O.K.
              //
                  TINY4412 # mmc write 1 0xc0000000 0x30 0x21D
                  MMC write: dev # 1, block # 48, count 541 ... 541 blocks written: OK

//6.4 烧写E4412_tzsw.bin
              //
                  TINY4412 # dnw
                  OTG cable Connected!
                  Now, Waiting for DNW to transmit data               
              //
                  ai@ai-OptiPlex-790:~/Documents/uboot_tiny4412$ sudo dnw  sd_fuse/tiny4412/E4412_tzsw.bin
                  Download Done!! Download Address: 0xc0000000, Download Filesize:0x17000
                  Checksum is being calculated.
                  Checksum O.K.
              //
                  TINY4412 # mmc write 1 0xc0000000 0x2c0 0xB8
                  MMC write: dev # 1, block # 704, count 184 ... 184 blocks written: OK

启动分区,到此全部烧写完成， 注意， 一定要关闭emmc:
u-boot下继续输入：
TINY4412 # emmc close 1
eMMC CLOSE Success.!!


现在uboot已经完整的烧入到了eMMC， 可以将开关S2拨到 NAND(eMMC启动)一侧， 从emmc启动， 看uboot输出log已经变成了:
   TINY4412 # OK
   U-Boot 2010.12-00000-gd1851db (Apr 07 2018 - 16:39:24) for TINY4412

   CPU:	S5PC220 [Samsung SOC on SMP Platform Base on ARM CortexA9]
      APLL = 1400MHz, MPLL = 800MHz

   Board:	TINY4412
   DRAM:	1023 MiB

   vdd_arm: 1.2
   vdd_int: 1.0
   vdd_mif: 1.1

   BL1 version:  N/A (TrustZone Enabled BSP)

   Checking Boot Mode ... EMMC4.41              //从SD变成了EMMC
   REVISION: 1.1
   MMC Device 0: 3728 MB
   MMC Device 1: 7580 MB
   MMC Device 2: N/A
   *** Warning - using default environment

   Net:	No ethernet found.
   Hit any key to stop autoboot:  0 
   TINY4412 # <INTERRUPT>
   TINY4412 #
